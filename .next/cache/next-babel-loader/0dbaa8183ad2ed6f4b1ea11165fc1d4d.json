{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { EmptyState, Layout, Page, TextStyle, Card, Button, ResourceList, ResourceItem, Thumbnail } from '@shopify/polaris';\nimport { ResourcePicker } from '@shopify/app-bridge-react';\nimport generateUpsellSnippet from '../components/upsell-in-cart.liquid.js';\nimport axios from 'axios';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      selectedProducts: [],\n      themeId: ''\n    });\n\n    _defineProperty(this, \"handleSelection\", async resources => {\n      this.setState({\n        open: false,\n        selectedProducts: resources.selection\n      });\n    });\n\n    _defineProperty(this, \"publish\", () => {\n      const {\n        selectedProducts,\n        themeId\n      } = this.state;\n      const newUpsellTemplate = generateUpsellSnippet(selectedProducts);\n      console.log({\n        newUpsellTemplate\n      });\n      const strToAppendToCartTemplate = `{% endraw %}{% include 'upsell-in-cart' %}{% raw %}`;\n      axios.get(`/api/shopify/themes/${themeId}/assets.json?asset[key]=snippets/ajax-cart-template.liquid`).then(({\n        data\n      }) => {\n        const originalTemplate = data.asset.value;\n\n        if (originalTemplate.includes(`{% include 'upsell-in-cart' %}`)) {\n          return;\n        }\n\n        const regEx = /\\<\\/div\\>[\\n ]+<\\/form\\>/g;\n        const newTemplate = originalTemplate.replace(regEx, strToAppendToCartTemplate + originalTemplate.match(regEx)[0]);\n        axios.put(`/api/shopify/themes/${themeId}/assets.json`, {\n          asset: {\n            key: 'snippets/ajax-cart-template.liquid',\n            value: newTemplate\n          }\n        });\n      });\n      axios.put(`/api/shopify/themes/${themeId}/assets.json`, {\n        \"asset\": {\n          \"key\": \"snippets/upsell-in-cart.liquid\",\n          \"value\": newUpsellTemplate\n        }\n      }).then(({\n        data\n      }) => {\n        console.log({\n          data\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    aios.get(`/api/shopify/themes.json`).then(({\n      data\n    }) => {\n      const themeId = data.themes.find(theme => theme.role === 'main').id;\n      this.setState({\n        themeId\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedProducts\n    } = this.state;\n    return __jsx(Page, null, __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      })\n    }), __jsx(Layout, null, !selectedProducts.length && __jsx(EmptyState, {\n      heading: \"Choose products you want to upsell.\",\n      action: {\n        content: 'Select products',\n        onAction: () => {\n          this.setState({\n            open: true\n          });\n        }\n      },\n      image: img\n    }, __jsx(\"p\", null, \"Select at least 1 product.\")), !!selectedProducts.length && __jsx(React.Fragment, null, __jsx(Layout.AnnotatedSection, {\n      title: \"Upsell Products\",\n      description: __jsx(Button, {\n        onClick: () => this.setState({\n          open: true\n        })\n      }, \"Reselect Products\")\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'product',\n        plural: 'products'\n      },\n      items: selectedProducts,\n      renderItem: item => __jsx(ResourceItem, {\n        id: item.id,\n        media: __jsx(Thumbnail, {\n          alt: item.title,\n          size: \"medium\",\n          source: item.images[0].originalSrc\n        }),\n        accessibilityLabel: `View details for ${item.title}`,\n        name: item.title\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title)))\n    }))), __jsx(Button, {\n      primary: true,\n      onClick: this.publish\n    }, \"Publish\"))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/sonchu/Projects/upsell-metropolia/pages/index.js"],"names":["EmptyState","Layout","Page","TextStyle","Card","Button","ResourceList","ResourceItem","Thumbnail","ResourcePicker","generateUpsellSnippet","axios","img","Index","React","Component","open","selectedProducts","themeId","resources","setState","selection","state","newUpsellTemplate","console","log","strToAppendToCartTemplate","get","then","data","originalTemplate","asset","value","includes","regEx","newTemplate","replace","match","put","key","componentDidMount","aios","themes","find","theme","role","id","render","handleSelection","length","content","onAction","singular","plural","item","title","images","originalSrc","publish"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,SAAnC,EAA8CC,IAA9C,EAAoDC,MAApD,EAA4DC,YAA5D,EAA0EC,YAA1E,EAAwFC,SAAxF,QAAyG,kBAAzG;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,mEAAZ;;AAEA,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,gBAAgB,EAAE,EAFZ;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAD0B;;AAAA,6CAehB,MAAOC,SAAP,IAAqB;AACrC,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,gBAAgB,EAAEE,SAAS,CAACE;AAA3C,OAAd;AACD,KAjBiC;;AAAA,qCAmBxB,MAAM;AACd,YAAM;AAAEJ,QAAAA,gBAAF;AAAoBC,QAAAA;AAApB,UAAgC,KAAKI,KAA3C;AACA,YAAMC,iBAAiB,GAAIb,qBAAqB,CAACO,gBAAD,CAAhD;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,QAAAA;AAAD,OAAZ;AAEA,YAAMG,yBAAyB,GAAI,qDAAnC;AACAf,MAAAA,KAAK,CAACgB,GAAN,CAAW,uBAAsBT,OAAQ,4DAAzC,EACGU,IADH,CACQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AAClB,cAAMC,gBAAgB,GAAGD,IAAI,CAACE,KAAL,CAAWC,KAApC;;AACA,YAAIF,gBAAgB,CAACG,QAAjB,CAA2B,gCAA3B,CAAJ,EAAiE;AAC/D;AACD;;AACD,cAAMC,KAAK,GAAG,2BAAd;AACA,cAAMC,WAAW,GAAGL,gBAAgB,CAACM,OAAjB,CAAyBF,KAAzB,EAAgCR,yBAAyB,GAAEI,gBAAgB,CAACO,KAAjB,CAAuBH,KAAvB,EAA8B,CAA9B,CAA3D,CAApB;AACAvB,QAAAA,KAAK,CAAC2B,GAAN,CAAW,uBAAsBpB,OAAQ,cAAzC,EAAwD;AACtDa,UAAAA,KAAK,EAAE;AACLQ,YAAAA,GAAG,EAAE,oCADA;AAELP,YAAAA,KAAK,EAAEG;AAFF;AAD+C,SAAxD;AAMD,OAdH;AAgBAxB,MAAAA,KAAK,CAAC2B,GAAN,CAAW,uBAAsBpB,OAAQ,cAAzC,EAAwD;AACtD,iBAAS;AACP,iBAAO,gCADA;AAEP,mBAASK;AAFF;AAD6C,OAAxD,EAKGK,IALH,CAKQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAc;AACpBL,QAAAA,OAAO,CAACC,GAAR,CAAY;AAACI,UAAAA;AAAD,SAAZ;AACD,OAPD;AAQD,KAjDiC;AAAA;;AAOlCW,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,IAAI,CAACd,GAAL,CAAU,0BAAV,EACGC,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClB,YAAMX,OAAO,GAAGW,IAAI,CAACa,MAAL,CAAYC,IAAZ,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAN,KAAe,MAA3C,EAAmDC,EAAnE;AACA,WAAK1B,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAJH;AAKD;;AAsCD6B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE9B,MAAAA;AAAF,QAAuB,KAAKK,KAAlC;AACA,WACE,MAAC,IAAD,QACE,MAAC,cAAD;AACE,MAAA,YAAY,EAAC,SADf;AAEE,MAAA,YAAY,EAAE,KAFhB;AAGE,MAAA,IAAI,EAAE,KAAKA,KAAL,CAAWN,IAHnB;AAIE,MAAA,WAAW,EAAGG,SAAD,IAAe,KAAK6B,eAAL,CAAqB7B,SAArB,CAJ9B;AAKE,MAAA,QAAQ,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AALlB,MADF,EAQE,MAAC,MAAD,QACG,CAACC,gBAAgB,CAACgC,MAAlB,IACC,MAAC,UAAD;AACE,MAAA,OAAO,EAAC,qCADV;AAEE,MAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,iBADH;AAENC,QAAAA,QAAQ,EAAE,MAAM;AACd,eAAK/B,QAAL,CAAc;AAAEJ,YAAAA,IAAI,EAAE;AAAR,WAAd;AACD;AAJK,OAFV;AAQE,MAAA,KAAK,EAAEJ;AART,OAUE,8CAVF,CAFJ,EAeG,CAAC,CAACK,gBAAgB,CAACgC,MAAnB,IACC,4BACE,MAAC,MAAD,CAAQ,gBAAR;AACE,MAAA,KAAK,EAAC,iBADR;AAEE,MAAA,WAAW,EACT,MAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAK7B,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAE;AAAR,SAAd;AAAvB;AAHJ,OAME,MAAC,IAAD;AAAM,MAAA,SAAS;AAAf,OACE,MAAC,YAAD;AACE,MAAA,YAAY,EAAE;AAACoC,QAAAA,QAAQ,EAAE,SAAX;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OADhB;AAEE,MAAA,KAAK,EAAEpC,gBAFT;AAGE,MAAA,UAAU,EAAGqC,IAAD,IACV,MAAC,YAAD;AACE,QAAA,EAAE,EAAEA,IAAI,CAACR,EADX;AAEE,QAAA,KAAK,EACH,MAAC,SAAD;AAAW,UAAA,GAAG,EAAEQ,IAAI,CAACC,KAArB;AAA4B,UAAA,IAAI,EAAC,QAAjC;AAA0C,UAAA,MAAM,EAAED,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC;AAAjE,UAHJ;AAKE,QAAA,kBAAkB,EAAG,oBAAmBH,IAAI,CAACC,KAAM,EALrD;AAME,QAAA,IAAI,EAAED,IAAI,CAACC;AANb,SAQE,kBACE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SAA+BD,IAAI,CAACC,KAApC,CADF,CARF;AAJJ,MADF,CANF,CADF,EA4BE,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKG;AAA9B,iBA5BF,CAhBJ,CARF,CADF;AA2DD;;AAhHiC;;AAmHpC,eAAe7C,KAAf","sourcesContent":["import { EmptyState, Layout, Page, TextStyle, Card, Button, ResourceList, ResourceItem, Thumbnail } from '@shopify/polaris';\nimport { ResourcePicker } from '@shopify/app-bridge-react';\nimport generateUpsellSnippet from '../components/upsell-in-cart.liquid.js';\nimport axios from 'axios';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  state = {\n    open: false,\n    selectedProducts: [],\n    themeId: ''\n  }\n\n  componentDidMount() {\n    aios.get(`/api/shopify/themes.json`)\n      .then(({ data }) => {\n        const themeId = data.themes.find((theme) => theme.role === 'main').id;\n        this.setState({ themeId });\n      })\n  }\n\n  handleSelection = async (resources) => {\n    this.setState({ open: false, selectedProducts: resources.selection })\n  };\n\n  publish = () => {\n    const { selectedProducts, themeId } = this.state;\n    const newUpsellTemplate = (generateUpsellSnippet(selectedProducts));\n    console.log({newUpsellTemplate});\n\n    const strToAppendToCartTemplate = `{% endraw %}{% include 'upsell-in-cart' %}{% raw %}`\n    axios.get(`/api/shopify/themes/${themeId}/assets.json?asset[key]=snippets/ajax-cart-template.liquid`)\n      .then(({ data }) => {\n        const originalTemplate = data.asset.value;\n        if (originalTemplate.includes(`{% include 'upsell-in-cart' %}`)) {\n          return;\n        }\n        const regEx = /\\<\\/div\\>[\\n ]+<\\/form\\>/g;\n        const newTemplate = originalTemplate.replace(regEx, strToAppendToCartTemplate+ originalTemplate.match(regEx)[0])\n        axios.put(`/api/shopify/themes/${themeId}/assets.json`, {\n          asset: {\n            key: 'snippets/ajax-cart-template.liquid',\n            value: newTemplate\n          }\n        })\n      })\n\n    axios.put(`/api/shopify/themes/${themeId}/assets.json`, {\n      \"asset\": {\n        \"key\": \"snippets/upsell-in-cart.liquid\",\n        \"value\": newUpsellTemplate\n      }\n    }).then(({ data }) => {\n      console.log({data});\n    })\n  }\n\n  render() {\n    const { selectedProducts } = this.state;\n    return (\n      <Page>\n        <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n        <Layout>\n          {!selectedProducts.length &&\n            <EmptyState\n              heading=\"Choose products you want to upsell.\"\n              action={{\n                content: 'Select products',\n                onAction: () => {\n                  this.setState({ open: true })\n                },\n              }}\n              image={img}\n            >\n              <p>Select at least 1 product.</p>\n            </EmptyState>\n          }\n          {!!selectedProducts.length &&\n            <>\n              <Layout.AnnotatedSection\n                title=\"Upsell Products\"\n                description={(\n                  <Button onClick={() => this.setState({ open: true })}>Reselect Products</Button>\n                )}\n              >\n                <Card sectioned>\n                  <ResourceList\n                    resourceName={{singular: 'product', plural: 'products'}}\n                    items={selectedProducts}\n                    renderItem={(item) => (\n                      <ResourceItem\n                        id={item.id}\n                        media={\n                          <Thumbnail alt={item.title} size=\"medium\" source={item.images[0].originalSrc} />\n                        }\n                        accessibilityLabel={`View details for ${item.title}`}\n                        name={item.title}\n                      >\n                        <h3>\n                          <TextStyle variation=\"strong\">{item.title}</TextStyle>\n                        </h3>\n                      </ResourceItem>\n                    )}\n                  />\n                </Card>\n              </Layout.AnnotatedSection>\n              <Button primary onClick={this.publish}>Publish</Button>\n            </>\n          }\n        </Layout>\n      </Page>\n    )\n  }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}