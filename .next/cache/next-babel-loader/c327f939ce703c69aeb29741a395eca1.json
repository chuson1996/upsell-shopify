{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { EmptyState, Layout, Page, TextStyle, Card, Button, ResourceList, ResourceItem, Thumbnail } from '@shopify/polaris';\nimport { ResourcePicker } from '@shopify/app-bridge-react';\nimport generateUpsellSnippet from '../components/upsell-in-cart.liquid.js';\nimport axios from 'axios';\nvar img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      open: false,\n      selectedProducts: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelection\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resources) {\n        var themeId, strToAppendToCartTemplate;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  open: false,\n                  selectedProducts: resources.selection\n                });\n\n                console.log({\n                  resources: resources\n                });\n                _context.next = 4;\n                return aios.get(\"/api/shopify/themes.json\");\n\n              case 4:\n                themeId = _context.sent.data.themes.find(function (theme) {\n                  return theme.role === 'main';\n                }).id;\n                strToAppendToCartTemplate = \"{% endraw %}{% include 'upsell-in-cart' %}{% raw %}\";\n                axios.get(\"/api/shopify/themes/\".concat(themeId, \"/assets.json?asset[key]=snippets/ajax-cart-template.liquid\")).then(function (_ref2) {\n                  var data = _ref2.data;\n                  var originalTemplate = data.asset.value;\n\n                  if (originalTemplate.includes(\"{% include 'upsell-in-cart' %}\")) {\n                    return;\n                  }\n\n                  var regEx = /\\<\\/div\\>[\\n ]+<\\/form\\>/g;\n                  var newTemplate = originalTemplate.replace(regEx, strToAppendToCartTemplate + originalTemplate.match(regEx)[0]);\n                  axios.put(\"/api/shopify/themes/\".concat(themeId, \"/assets.json\"), {\n                    asset: {\n                      key: 'snippets/ajax-cart-template.liquid',\n                      value: newTemplate\n                    }\n                  });\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"publish\", function () {\n      var selectedProducts = _this.state.selectedProducts;\n      var newUpsellTemplate = generateUpsellSnippet(selectedProducts);\n      console.log({\n        newUpsellTemplate: newUpsellTemplate\n      });\n      axios.put(\"/api/shopify/themes/\".concat(themeId, \"/assets.json\"), {\n        \"asset\": {\n          \"key\": \"snippets/upsell-in-cart.liquid\",\n          \"value\": newUpsellTemplate\n        }\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        console.log({\n          data: data\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedProducts = this.state.selectedProducts;\n      return __jsx(Page, null, __jsx(ResourcePicker, {\n        resourceType: \"Product\",\n        showVariants: false,\n        open: this.state.open,\n        onSelection: function onSelection(resources) {\n          return _this2.handleSelection(resources);\n        },\n        onCancel: function onCancel() {\n          return _this2.setState({\n            open: false\n          });\n        }\n      }), __jsx(Layout, null, !selectedProducts.length && __jsx(EmptyState, {\n        heading: \"Choose products you want to upsell.\",\n        action: {\n          content: 'Select products',\n          onAction: function onAction() {\n            _this2.setState({\n              open: true\n            });\n          }\n        },\n        image: img\n      }, __jsx(\"p\", null, \"Select at least 1 product.\")), !!selectedProducts.length && __jsx(React.Fragment, null, __jsx(Layout.AnnotatedSection, {\n        title: \"Upsell Products\",\n        description: __jsx(Button, {\n          onClick: function onClick() {\n            return _this2.setState({\n              open: true\n            });\n          }\n        }, \"Reselect Products\")\n      }, __jsx(Card, {\n        sectioned: true\n      }, __jsx(ResourceList, {\n        resourceName: {\n          singular: 'product',\n          plural: 'products'\n        },\n        items: selectedProducts,\n        renderItem: function renderItem(item) {\n          return __jsx(ResourceItem, {\n            id: item.id,\n            media: __jsx(Thumbnail, {\n              alt: item.title,\n              size: \"medium\",\n              source: item.images[0].originalSrc\n            }),\n            accessibilityLabel: \"View details for \".concat(item.title),\n            name: item.title\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, item.title)));\n        }\n      }))), __jsx(Button, {\n        primary: true,\n        onClick: this.publish\n      }, \"Publish\"))));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/sonchu/Projects/upsell-metropolia/pages/index.js"],"names":["EmptyState","Layout","Page","TextStyle","Card","Button","ResourceList","ResourceItem","Thumbnail","ResourcePicker","generateUpsellSnippet","axios","img","Index","open","selectedProducts","resources","setState","selection","console","log","aios","get","themeId","data","themes","find","theme","role","id","strToAppendToCartTemplate","then","originalTemplate","asset","value","includes","regEx","newTemplate","replace","match","put","key","state","newUpsellTemplate","handleSelection","length","content","onAction","singular","plural","item","title","images","originalSrc","publish","React","Component"],"mappings":"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","sourcesContent":["import { EmptyState, Layout, Page, TextStyle, Card, Button, ResourceList, ResourceItem, Thumbnail } from '@shopify/polaris';\nimport { ResourcePicker } from '@shopify/app-bridge-react';\nimport generateUpsellSnippet from '../components/upsell-in-cart.liquid.js';\nimport axios from 'axios';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  state = {\n    open: false,\n    selectedProducts: []\n  }\n\n  handleSelection = async (resources) => {\n    this.setState({ open: false, selectedProducts: resources.selection })\n    console.log({ resources });\n\n    const themeId = (await aios.get(`/api/shopify/themes.json`)).data.themes.find((theme) => theme.role === 'main').id;\n\n    const strToAppendToCartTemplate = `{% endraw %}{% include 'upsell-in-cart' %}{% raw %}`\n    axios.get(`/api/shopify/themes/${themeId}/assets.json?asset[key]=snippets/ajax-cart-template.liquid`)\n      .then(({ data }) => {\n        const originalTemplate = data.asset.value;\n        if (originalTemplate.includes(`{% include 'upsell-in-cart' %}`)) {\n          return;\n        }\n        const regEx = /\\<\\/div\\>[\\n ]+<\\/form\\>/g;\n        const newTemplate = originalTemplate.replace(regEx, strToAppendToCartTemplate+ originalTemplate.match(regEx)[0])\n        axios.put(`/api/shopify/themes/${themeId}/assets.json`, {\n          asset: {\n            key: 'snippets/ajax-cart-template.liquid',\n            value: newTemplate\n          }\n        })\n      })\n  };\n\n  publish = () => {\n    const { selectedProducts } = this.state;\n    const newUpsellTemplate = (generateUpsellSnippet(selectedProducts));\n    console.log({newUpsellTemplate});\n    axios.put(`/api/shopify/themes/${themeId}/assets.json`, {\n      \"asset\": {\n        \"key\": \"snippets/upsell-in-cart.liquid\",\n        \"value\": newUpsellTemplate\n      }\n    }).then(({ data }) => {\n      console.log({data});\n    })\n  }\n\n  render() {\n    const { selectedProducts } = this.state;\n    return (\n      <Page>\n        <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n        <Layout>\n          {!selectedProducts.length &&\n            <EmptyState\n              heading=\"Choose products you want to upsell.\"\n              action={{\n                content: 'Select products',\n                onAction: () => {\n                  this.setState({ open: true })\n                },\n              }}\n              image={img}\n            >\n              <p>Select at least 1 product.</p>\n            </EmptyState>\n          }\n          {!!selectedProducts.length &&\n            <>\n              <Layout.AnnotatedSection\n                title=\"Upsell Products\"\n                description={(\n                  <Button onClick={() => this.setState({ open: true })}>Reselect Products</Button>\n                )}\n              >\n                <Card sectioned>\n                  <ResourceList\n                    resourceName={{singular: 'product', plural: 'products'}}\n                    items={selectedProducts}\n                    renderItem={(item) => (\n                      <ResourceItem\n                        id={item.id}\n                        media={\n                          <Thumbnail alt={item.title} size=\"medium\" source={item.images[0].originalSrc} />\n                        }\n                        accessibilityLabel={`View details for ${item.title}`}\n                        name={item.title}\n                      >\n                        <h3>\n                          <TextStyle variation=\"strong\">{item.title}</TextStyle>\n                        </h3>\n                      </ResourceItem>\n                    )}\n                  />\n                </Card>\n              </Layout.AnnotatedSection>\n              <Button primary onClick={this.publish}>Publish</Button>\n            </>\n          }\n        </Layout>\n      </Page>\n    )\n  }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}