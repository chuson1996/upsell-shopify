{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ClientRouter from '../components/ClientRouter';\nimport '@shopify/polaris/dist/styles.css';\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var config = {\n        apiKey: API_KEY,\n        shopOrigin: Cookies.get(\"shopOrigin\"),\n        forceRedirect: true\n      };\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Upsell App\"), __jsx(\"meta\", {\n        charSet: \"utf-8\"\n      })), __jsx(Provider, {\n        config: config\n      }, __jsx(ClientRouter, null), __jsx(AppProvider, null, __jsx(Component, pageProps))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/sonchu/Projects/upsell-metropolia/pages/_app.js"],"names":["App","Head","AppProvider","Provider","Cookies","ClientRouter","MyApp","config","apiKey","API_KEY","shopOrigin","get","forceRedirect","props","Component","pageProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,kCAAP;;IAEMC,K;;;;;;;;;;;;;6BACK;AACP,UAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAEC,OADK;AAEbC,QAAAA,UAAU,EAAEN,OAAO,CAACO,GAAR,CAAY,YAAZ,CAFC;AAGbC,QAAAA,aAAa,EAAE;AAHF,OAAf;AADO,wBAM0B,KAAKC,KAN/B;AAAA,UAMCC,SAND,eAMCA,SAND;AAAA,UAMYC,SANZ,eAMYA,SANZ;AAOP,aACE,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,IAAD,QACE,kCADF,EAEE;AAAM,QAAA,OAAO,EAAC;AAAd,QAFF,CADF,EAKE,MAAC,QAAD;AAAU,QAAA,MAAM,EAAER;AAAlB,SACE,MAAC,YAAD,OADF,EAEE,MAAC,WAAD,QACE,MAAC,SAAD,EAAeQ,SAAf,CADF,CAFF,CALF,CADF;AAcD;;;;EAtBiBf,G;;AAyBpB,eAAeM,KAAf","sourcesContent":["import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport Cookies from 'js-cookie';\nimport ClientRouter from '../components/ClientRouter';\nimport '@shopify/polaris/dist/styles.css';\n\nclass MyApp extends App {\n  render() {\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get(\"shopOrigin\"),\n      forceRedirect: true\n    };\n    const { Component, pageProps } = this.props;\n    return (\n      <React.Fragment>\n        <Head>\n          <title>Upsell App</title>\n          <meta charSet=\"utf-8\" />\n        </Head>\n        <Provider config={config}>\n          <ClientRouter />\n          <AppProvider>\n            <Component {...pageProps} />\n          </AppProvider>\n        </Provider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}