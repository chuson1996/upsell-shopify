{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { EmptyState, Layout, Page, TextStyle, Card, FormLayout, TextField } from '@shopify/polaris';\nimport { TitleBar, ResourcePicker } from '@shopify/app-bridge-react';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      selectedProducts: []\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      this.setState({\n        open: false,\n        selectedProducts: resources.selection\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedProducts\n    } = this.state;\n    return __jsx(Page, null, __jsx(TitleBar, {\n      title: \"Upsell App\",\n      primaryAction: {\n        content: 'Select products'\n      }\n    }), __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      })\n    }), __jsx(Layout, null, !selectedProducts.length && __jsx(EmptyState, {\n      heading: \"Choose products you want to upsell.\",\n      action: {\n        content: 'Select products',\n        onAction: () => {\n          this.setState({\n            open: true\n          });\n        }\n      },\n      image: img\n    }, __jsx(\"p\", null, \"Select products to change their price temporarily.\")), selectedProducts.length && __jsx(Layout.AnnotatedSection, {\n      title: \"Upsell Products\",\n      description: \"\"\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(FormLayout, null)))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/sonchu/Projects/upsell-metropolia/pages/index.js"],"names":["EmptyState","Layout","Page","TextStyle","Card","FormLayout","TextField","TitleBar","ResourcePicker","img","Index","React","Component","open","selectedProducts","resources","setState","selection","render","state","content","handleSelection","length","onAction"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,SAAnC,EAA8CC,IAA9C,EAAoDC,UAApD,EAAgEC,SAAhE,QAAiF,kBAAjF;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,2BAAzC;AAEA,MAAMC,GAAG,GAAG,mEAAZ;;AAEA,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,gBAAgB,EAAE;AAFZ,KAD0B;;AAAA,6CAMfC,SAAD,IAAe;AAC/B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,gBAAgB,EAAEC,SAAS,CAACE;AAA3C,OAAd;AACD,KARiC;AAAA;;AAUlCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAuB,KAAKK,KAAlC;AACA,WACE,MAAC,IAAD,QACE,MAAC,QAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAE;AADI;AAFjB,MADF,EAOE,MAAC,cAAD;AACE,MAAA,YAAY,EAAC,SADf;AAEE,MAAA,YAAY,EAAE,KAFhB;AAGE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWN,IAHnB;AAIE,MAAA,WAAW,EAAGE,SAAD,IAAe,KAAKM,eAAL,CAAqBN,SAArB,CAJ9B;AAKE,MAAA,QAAQ,EAAE,MAAM,KAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAd;AALlB,MAPF,EAcE,MAAC,MAAD,QACG,CAACC,gBAAgB,CAACQ,MAAlB,IACC,MAAC,UAAD;AACE,MAAA,OAAO,EAAC,qCADV;AAEE,MAAA,MAAM,EAAE;AACNF,QAAAA,OAAO,EAAE,iBADH;AAENG,QAAAA,QAAQ,EAAE,MAAM;AACd,eAAKP,QAAL,CAAc;AAAEH,YAAAA,IAAI,EAAE;AAAR,WAAd;AACD;AAJK,OAFV;AAQE,MAAA,KAAK,EAAEJ;AART,OAUE,sEAVF,CAFJ,EAeGK,gBAAgB,CAACQ,MAAjB,IACC,MAAC,MAAD,CAAQ,gBAAR;AACE,MAAA,KAAK,EAAC,iBADR;AAEE,MAAA,WAAW,EAAC;AAFd,OAIE,MAAC,IAAD;AAAM,MAAA,SAAS;AAAf,OACE,MAAC,UAAD,OADF,CAJF,CAhBJ,CAdF,CADF;AA6CD;;AAzDiC;;AA4DpC,eAAeZ,KAAf","sourcesContent":["import { EmptyState, Layout, Page, TextStyle, Card, FormLayout, TextField } from '@shopify/polaris';\nimport { TitleBar, ResourcePicker } from '@shopify/app-bridge-react';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  state = {\n    open: false,\n    selectedProducts: []\n  }\n\n  handleSelection = (resources) => {\n    this.setState({ open: false, selectedProducts: resources.selection })\n  };\n\n  render() {\n    const { selectedProducts } = this.state;\n    return (\n      <Page>\n        <TitleBar\n          title=\"Upsell App\"\n          primaryAction={{\n            content: 'Select products',\n          }}\n        />\n        <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n        <Layout>\n          {!selectedProducts.length &&\n            <EmptyState\n              heading=\"Choose products you want to upsell.\"\n              action={{\n                content: 'Select products',\n                onAction: () => {\n                  this.setState({ open: true })\n                },\n              }}\n              image={img}\n            >\n              <p>Select products to change their price temporarily.</p>\n            </EmptyState>\n          }\n          {selectedProducts.length &&\n            <Layout.AnnotatedSection\n              title=\"Upsell Products\"\n              description=\"\"\n            >\n              <Card sectioned>\n                <FormLayout>\n\n                </FormLayout>\n              </Card>\n            </Layout.AnnotatedSection>\n          }\n        </Layout>\n      </Page>\n    )\n  }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}