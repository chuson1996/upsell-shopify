{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { EmptyState, Layout, Page, TextStyle, Card, FormLayout, TextField, Button, ResourceList, ResourceItem, Thumbnail } from '@shopify/polaris';\nimport { TitleBar, ResourcePicker } from '@shopify/app-bridge-react';\nimport generateUpsellSnippet from '../components/upsell-in-cart.liquid.js';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      selectedProducts: []\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      this.setState({\n        open: false,\n        selectedProducts: resources.selection\n      });\n      console.log(generateUpsellSnippet(resources.selection));\n      axios.put(`/api/shopify/themes/112204841120/assets.json`, {\n        \"asset\": {\n          \"key\": \"snippets/upsell-in-cart.liquid\",\n          \"value\": \"<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>\"\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedProducts\n    } = this.state;\n    return __jsx(Page, null, __jsx(TitleBar, {\n      title: \"Upsell App\",\n      primaryAction: {\n        content: 'Select products'\n      }\n    }), __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      })\n    }), __jsx(Layout, null, !selectedProducts.length && __jsx(EmptyState, {\n      heading: \"Choose products you want to upsell.\",\n      action: {\n        content: 'Select products',\n        onAction: () => {\n          this.setState({\n            open: true\n          });\n        }\n      },\n      image: img\n    }, __jsx(\"p\", null, \"Select products to change their price temporarily.\")), selectedProducts.length && __jsx(Layout.AnnotatedSection, {\n      title: \"Upsell Products\",\n      description: __jsx(Button, {\n        onClick: () => this.setState({\n          open: true\n        })\n      }, \"Reselect Products\")\n    }, __jsx(Card, {\n      sectioned: true\n    }, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'product',\n        plural: 'products'\n      },\n      items: selectedProducts,\n      renderItem: item => __jsx(ResourceItem, {\n        id: item.id,\n        media: __jsx(Thumbnail, {\n          alt: item.title,\n          size: \"medium\",\n          source: item.images[0].originalSrc\n        }),\n        accessibilityLabel: `View details for ${item.title}`,\n        name: item.title\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title)))\n    })))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/sonchu/Projects/upsell-metropolia/pages/index.js"],"names":["EmptyState","Layout","Page","TextStyle","Card","FormLayout","TextField","Button","ResourceList","ResourceItem","Thumbnail","TitleBar","ResourcePicker","generateUpsellSnippet","img","Index","React","Component","open","selectedProducts","resources","setState","selection","console","log","axios","put","render","state","content","handleSelection","length","onAction","singular","plural","item","id","title","images","originalSrc"],"mappings":"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","sourcesContent":["import { EmptyState, Layout, Page, TextStyle, Card, FormLayout, TextField, Button, ResourceList, ResourceItem, Thumbnail } from '@shopify/polaris';\nimport { TitleBar, ResourcePicker } from '@shopify/app-bridge-react';\nimport generateUpsellSnippet from '../components/upsell-in-cart.liquid.js';\n\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  state = {\n    open: false,\n    selectedProducts: []\n  }\n\n  handleSelection = (resources) => {\n    this.setState({ open: false, selectedProducts: resources.selection })\n    console.log(generateUpsellSnippet(resources.selection));\n    axios.put(`/api/shopify/themes/112204841120/assets.json`, {\n      \"asset\": {\n        \"key\": \"snippets/upsell-in-cart.liquid\",\n        \"value\": \"<img src='backsoon-postit.png'><p>We are busy updating the store for you and will be back within the hour.</p>\"\n      }\n    })\n  };\n\n  render() {\n    const { selectedProducts } = this.state;\n    return (\n      <Page>\n        <TitleBar\n          title=\"Upsell App\"\n          primaryAction={{\n            content: 'Select products',\n          }}\n        />\n        <ResourcePicker\n          resourceType=\"Product\"\n          showVariants={false}\n          open={this.state.open}\n          onSelection={(resources) => this.handleSelection(resources)}\n          onCancel={() => this.setState({ open: false })}\n        />\n        <Layout>\n          {!selectedProducts.length &&\n            <EmptyState\n              heading=\"Choose products you want to upsell.\"\n              action={{\n                content: 'Select products',\n                onAction: () => {\n                  this.setState({ open: true })\n                },\n              }}\n              image={img}\n            >\n              <p>Select products to change their price temporarily.</p>\n            </EmptyState>\n          }\n          {selectedProducts.length &&\n            <Layout.AnnotatedSection\n              title=\"Upsell Products\"\n              description={(\n                <Button onClick={() => this.setState({ open: true })}>Reselect Products</Button>\n              )}\n            >\n              <Card sectioned>\n                <ResourceList\n                  resourceName={{singular: 'product', plural: 'products'}}\n                  items={selectedProducts}\n                  renderItem={(item) => (\n                    <ResourceItem\n                      id={item.id}\n                      media={\n                        <Thumbnail alt={item.title} size=\"medium\" source={item.images[0].originalSrc} />\n                      }\n                      accessibilityLabel={`View details for ${item.title}`}\n                      name={item.title}\n                    >\n                      <h3>\n                        <TextStyle variation=\"strong\">{item.title}</TextStyle>\n                      </h3>\n                    </ResourceItem>\n                  )}\n                />\n              </Card>\n            </Layout.AnnotatedSection>\n          }\n        </Layout>\n      </Page>\n    )\n  }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}